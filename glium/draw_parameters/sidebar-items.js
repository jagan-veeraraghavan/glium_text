initSidebarItems({"enum":[["BackfaceCullingMode","Describes how triangles should be filtered before the fragment processing. Backface culling is purely an optimization. If you don't know what this does, just use `CullingDisabled`."],["DepthClamp","Specifies whether the depth value of samples should be clamped to `0.0` or `1.0`."],["PolygonMode","Defines how the device should render polygons."],["ProvokingVertex","The vertex to use for flat shading."],["QueryCreationError","Error that can happen when creating a query object."],["SamplesQueryParam","The query to use for samples counting."],["Smooth","Specifies a hint for the smoothing."]],"fn":[["validate","Checks parameters and panics if something is wrong."]],"struct":[["AnySamplesPassedQuery","A query type that allows you to know whether any sample has been written to the output during the operations executed with this query."],["ConditionalRendering","Condition whether to render or not."],["DrawParameters","Represents the parameters to use when drawing."],["PrimitivesGeneratedQuery","Query that allows you to know the number of primitives generated by the geometry shader. Will stay at `0` if you use it without any active geometry shader."],["SamplesPassedQuery","A query that allows you to know the number of samples written to the output during the draw operations where this query was active."],["Stencil",""],["TimeElapsedQuery","A query that allows you to know the number of nanoseconds that have elapsed during the draw operations."],["TransformFeedbackPrimitivesWrittenQuery","Query that allows you to know the number of primitives generated by transform feedback."]]});